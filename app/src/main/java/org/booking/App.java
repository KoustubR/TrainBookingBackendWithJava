/*
 * This source file was generated by the Gradle 'init' task
 */
package org.booking;

import org.booking.entities.Train;
import org.booking.entities.User;
import org.booking.services.UserBookingService;
import org.booking.util.UserServiceUtil;

import java.io.IOException;
import java.util.*;

public class App {
    public static void main(String[] args) {
        System.out.println("Running Train Booking System");
        Scanner scanner = new Scanner(System.in);
        int option = 0;
        UserBookingService userBookingService;
        try {
            userBookingService = new UserBookingService();
        } catch (IOException e) {
            System.out.println("Error: " + e.getMessage());
            return;
        }
        while (option != 7) {
            System.out.println("Enter your choice");
            System.out.println("1. Create a new user");
            System.out.println("2. Login");
            System.out.println("3. Fetch Bookings");
            System.out.println("4. Search Trains");
            System.out.println("5. Book a seat");
            System.out.println("6. Cancel my booking");
            System.out.println("7. Exit");
            option = scanner.nextInt();
            Train trainSelectedForBooking = new Train();
            switch (option) {
                case 1:
                    System.out.println("Enter your username");
                    String nameToSignUp = scanner.next();
                    System.out.println("Enter your password");
                    String passwordToSignUp = scanner.next();
                    User newuser = new User(nameToSignUp, passwordToSignUp, UserServiceUtil.hashPassword(passwordToSignUp), new ArrayList<>(), UUID.randomUUID().toString());
                    userBookingService.signUp(newuser);
                    break;
                case 2:
                    System.out.println("Enter your username");
                    String username = scanner.next();
                    System.out.println("Enter your password");
                    String password = scanner.next();
                    User userToLogin = new User(username, password, UserServiceUtil.hashPassword(password), new ArrayList<>(), UUID.randomUUID().toString());
                    try {
                        userBookingService = new UserBookingService(userToLogin);
                    } catch (IOException e) {
                        System.out.println("Error: " + e.getMessage());
                    }
                    break;
                case 3:
                    System.out.println("Fetching your bookings");
                    userBookingService.fetchBooking();
                    break;
                case 4:
                    System.out.println("Type your source station");
                    String source = scanner.next();
                    System.out.println("Type your destination station");
                    String dest = scanner.next();
                    List<Train> trains = userBookingService.getTrain(source, dest);
                    int index = 1;
                    for (Train t : trains) {
                        System.out.println(index + " Train id : " + t.getTrainId());
                        for (Map.Entry<String, String> entry : t.getStationTimes().entrySet()) {
                            System.out.println("station " + entry.getKey() + " time: " + entry.getValue());
                        }
                    }
                    System.out.println("Select a train by typing 1,2,3...");
                    trainSelectedForBooking = trains.get(scanner.nextInt());
                    break;
                case 5:
                    System.out.println("Select a seat out of these seats");
                    List<List<Integer>> seats = userBookingService.fetchSeats(trainSelectedForBooking);
                    for (List<Integer> row : seats) {
                        for (Integer val : row) {
                            System.out.print(val + " ");
                        }
                        System.out.println();
                    }
                    System.out.println("Select the seat by typing the row and column");
                    System.out.println("Enter the row");
                    int row = scanner.nextInt();
                    System.out.println("Enter the column");
                    int col = scanner.nextInt();
                    System.out.println("Booking your seat....");
                    Boolean booked = userBookingService.bookTrainSeat(trainSelectedForBooking, row, col);
                    if (booked.equals(Boolean.TRUE)) {
                        System.out.println("Booked! Enjoy your journey");
                    } else {
                        System.out.println("Can't book this seat");
                    }
                    break;
                case 6:
                    System.out.println("Type the ticketID you want to cancel");
                    String ticketID = scanner.next();
                    Boolean canceled = userBookingService.cancelBooking(ticketID);
                    if (canceled.equals(Boolean.TRUE)) {
                        System.out.println("Ticket Canceled");
                        break;
                    }
                    else{
                        continue;
                    }

                default:
                    break;
            }
        }
    }
}
